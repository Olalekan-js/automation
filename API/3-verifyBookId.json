{
	"info": {
		"_postman_id": "c41a6169-d938-45fe-b6ef-912f90a66817",
		"name": "Book API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8077065"
	},
	"item": [
		{
			"name": "Get Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json();\r",
							"\r",
							"// Find the book titled Untamed\r",
							"const target = res.find(element => element.name === 'Untamed');\r",
							"\r",
							"// Verify number ID of the target book\r",
							"pm.test('Verify the ID number of Untamed non-fiction book', ()=>{\r",
							"    pm.expect(target.id).to.eql(5);\r",
							"})\r",
							"\r",
							"// Verify the target book id value to be a number type\r",
							"pm.test('Verify the ID number for Untamed book to be a number type', ()=>{\r",
							"    pm.expect(target.id).to.be.a('number');\r",
							"})\r",
							"\r",
							"// Test to check if the response status code is 200\r",
							"pm.test(\"Verify the status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// Test to check if the response status message is OK\r",
							"pm.test(\"Verify status code message is OK\", () => {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/books",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}